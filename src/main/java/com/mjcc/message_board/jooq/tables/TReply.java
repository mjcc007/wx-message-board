/*
 * This file is generated by jOOQ.
 */
package com.mjcc.message_board.jooq.tables;


import com.mjcc.message_board.jooq.Indexes;
import com.mjcc.message_board.jooq.Keys;
import com.mjcc.message_board.jooq.Public;
import com.mjcc.message_board.jooq.tables.records.TReplyRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TReply extends TableImpl<TReplyRecord> {

    private static final long serialVersionUID = -1385760345;

    /**
     * The reference instance of <code>public.t_reply</code>
     */
    public static final TReply T_REPLY = new TReply();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TReplyRecord> getRecordType() {
        return TReplyRecord.class;
    }

    /**
     * The column <code>public.t_reply.lr_id</code>. 回复id编号
     */
    public final TableField<TReplyRecord, Integer> LR_ID = createField("lr_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('t_reply_lr_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "回复id编号");

    /**
     * The column <code>public.t_reply.lr_openid</code>. 回复人opendi
     */
    public final TableField<TReplyRecord, String> LR_OPENID = createField("lr_openid", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "回复人opendi");

    /**
     * The column <code>public.t_reply.lr_name</code>. 回复人名字
     */
    public final TableField<TReplyRecord, String> LR_NAME = createField("lr_name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "回复人名字");

    /**
     * The column <code>public.t_reply.lr_head_imgurl</code>. 回复人头像
     */
    public final TableField<TReplyRecord, String> LR_HEAD_IMGURL = createField("lr_head_imgurl", org.jooq.impl.SQLDataType.VARCHAR(512).nullable(false), this, "回复人头像");

    /**
     * The column <code>public.t_reply.lr_content</code>. 评论内容
     */
    public final TableField<TReplyRecord, String> LR_CONTENT = createField("lr_content", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "评论内容");

    /**
     * The column <code>public.t_reply.lr_type</code>. 留言类型,对评论还是回复
     */
    public final TableField<TReplyRecord, Short> LR_TYPE = createField("lr_type", org.jooq.impl.SQLDataType.SMALLINT, this, "留言类型,对评论还是回复");

    /**
     * The column <code>public.t_reply.lr_dest_id</code>. 回复目标id lr_type == comment ? 评论表id : 回复表id
     */
    public final TableField<TReplyRecord, Integer> LR_DEST_ID = createField("lr_dest_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "回复目标id lr_type == comment ? 评论表id : 回复表id");

    /**
     * The column <code>public.t_reply.lr_dest_openid</code>. 评论人的openid
     */
    public final TableField<TReplyRecord, String> LR_DEST_OPENID = createField("lr_dest_openid", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "评论人的openid");

    /**
     * The column <code>public.t_reply.lr_comment_id</code>. 挂在那个根评论下
     */
    public final TableField<TReplyRecord, Integer> LR_COMMENT_ID = createField("lr_comment_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "挂在那个根评论下");

    /**
     * The column <code>public.t_reply.lr_zan</code>. 被赞数
     */
    public final TableField<TReplyRecord, Integer> LR_ZAN = createField("lr_zan", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "被赞数");

    /**
     * The column <code>public.t_reply.lr_cai</code>. 被踩数
     */
    public final TableField<TReplyRecord, Integer> LR_CAI = createField("lr_cai", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "被踩数");

    /**
     * The column <code>public.t_reply.lr_date</code>. 创建时间
     */
    public final TableField<TReplyRecord, LocalDateTime> LR_DATE = createField("lr_date", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "创建时间");

    /**
     * Create a <code>public.t_reply</code> table reference
     */
    public TReply() {
        this(DSL.name("t_reply"), null);
    }

    /**
     * Create an aliased <code>public.t_reply</code> table reference
     */
    public TReply(String alias) {
        this(DSL.name(alias), T_REPLY);
    }

    /**
     * Create an aliased <code>public.t_reply</code> table reference
     */
    public TReply(Name alias) {
        this(alias, T_REPLY);
    }

    private TReply(Name alias, Table<TReplyRecord> aliased) {
        this(alias, aliased, null);
    }

    private TReply(Name alias, Table<TReplyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TReply(Table<O> child, ForeignKey<O, TReplyRecord> key) {
        super(child, key, T_REPLY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_REPLY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TReplyRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_REPLY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TReplyRecord> getPrimaryKey() {
        return Keys.T_REPLY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TReplyRecord>> getKeys() {
        return Arrays.<UniqueKey<TReplyRecord>>asList(Keys.T_REPLY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TReply as(String alias) {
        return new TReply(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TReply as(Name alias) {
        return new TReply(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TReply rename(String name) {
        return new TReply(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TReply rename(Name name) {
        return new TReply(name, null);
    }
}
