/*
 * This file is generated by jOOQ.
 */
package com.mjcc.message_board.jooq.tables.records;


import com.mjcc.message_board.jooq.tables.UserShareInfo;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 用户分享信息表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserShareInfoRecord extends UpdatableRecordImpl<UserShareInfoRecord> implements Record6<String, Short, String, String, String, LocalDateTime> {

    private static final long serialVersionUID = -1079042815;

    /**
     * Setter for <code>public.user_share_info.share_openid</code>. 用户的openid
     */
    public void setShareOpenid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user_share_info.share_openid</code>. 用户的openid
     */
    public String getShareOpenid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.user_share_info.share_status</code>. 用户的分享状态
     */
    public void setShareStatus(Short value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user_share_info.share_status</code>. 用户的分享状态
     */
    public Short getShareStatus() {
        return (Short) get(1);
    }

    /**
     * Setter for <code>public.user_share_info.target_one</code>. 用户目标1
     */
    public void setTargetOne(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.user_share_info.target_one</code>. 用户目标1
     */
    public String getTargetOne() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.user_share_info.target_two</code>. 用户的目标2
     */
    public void setTargetTwo(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.user_share_info.target_two</code>. 用户的目标2
     */
    public String getTargetTwo() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.user_share_info.target_three</code>. 用户的目标3
     */
    public void setTargetThree(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.user_share_info.target_three</code>. 用户的目标3
     */
    public String getTargetThree() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.user_share_info.create_time</code>. 创建时间
     */
    public void setCreateTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.user_share_info.create_time</code>. 创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, Short, String, String, String, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, Short, String, String, String, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return UserShareInfo.USER_SHARE_INFO.SHARE_OPENID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field2() {
        return UserShareInfo.USER_SHARE_INFO.SHARE_STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return UserShareInfo.USER_SHARE_INFO.TARGET_ONE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return UserShareInfo.USER_SHARE_INFO.TARGET_TWO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return UserShareInfo.USER_SHARE_INFO.TARGET_THREE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field6() {
        return UserShareInfo.USER_SHARE_INFO.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getShareOpenid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component2() {
        return getShareStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getTargetOne();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getTargetTwo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getTargetThree();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component6() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getShareOpenid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value2() {
        return getShareStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getTargetOne();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getTargetTwo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getTargetThree();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value6() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserShareInfoRecord value1(String value) {
        setShareOpenid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserShareInfoRecord value2(Short value) {
        setShareStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserShareInfoRecord value3(String value) {
        setTargetOne(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserShareInfoRecord value4(String value) {
        setTargetTwo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserShareInfoRecord value5(String value) {
        setTargetThree(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserShareInfoRecord value6(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserShareInfoRecord values(String value1, Short value2, String value3, String value4, String value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserShareInfoRecord
     */
    public UserShareInfoRecord() {
        super(UserShareInfo.USER_SHARE_INFO);
    }

    /**
     * Create a detached, initialised UserShareInfoRecord
     */
    public UserShareInfoRecord(String shareOpenid, Short shareStatus, String targetOne, String targetTwo, String targetThree, LocalDateTime createTime) {
        super(UserShareInfo.USER_SHARE_INFO);

        set(0, shareOpenid);
        set(1, shareStatus);
        set(2, targetOne);
        set(3, targetTwo);
        set(4, targetThree);
        set(5, createTime);
    }
}
