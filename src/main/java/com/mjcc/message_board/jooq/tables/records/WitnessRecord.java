/*
 * This file is generated by jOOQ.
 */
package com.mjcc.message_board.jooq.tables.records;


import com.mjcc.message_board.jooq.tables.Witness;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 分享关联表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WitnessRecord extends UpdatableRecordImpl<WitnessRecord> implements Record4<String, String, Integer, LocalDateTime> {

    private static final long serialVersionUID = 521465519;

    /**
     * Setter for <code>public.witness.share_openid</code>. 分享者的openid
     */
    public void setShareOpenid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.witness.share_openid</code>. 分享者的openid
     */
    public String getShareOpenid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.witness.witness_openid</code>. 见证者的openid
     */
    public void setWitnessOpenid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.witness.witness_openid</code>. 见证者的openid
     */
    public String getWitnessOpenid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.witness.category_id</code>. 惩罚的id
     */
    public void setCategoryId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.witness.category_id</code>. 惩罚的id
     */
    public Integer getCategoryId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.witness.create_time</code>. 创建时间
     */
    public void setCreateTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.witness.create_time</code>. 创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, Integer, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, Integer, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Witness.WITNESS.SHARE_OPENID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Witness.WITNESS.WITNESS_OPENID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Witness.WITNESS.CATEGORY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field4() {
        return Witness.WITNESS.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getShareOpenid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getWitnessOpenid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getCategoryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component4() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getShareOpenid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getWitnessOpenid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getCategoryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value4() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WitnessRecord value1(String value) {
        setShareOpenid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WitnessRecord value2(String value) {
        setWitnessOpenid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WitnessRecord value3(Integer value) {
        setCategoryId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WitnessRecord value4(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WitnessRecord values(String value1, String value2, Integer value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WitnessRecord
     */
    public WitnessRecord() {
        super(Witness.WITNESS);
    }

    /**
     * Create a detached, initialised WitnessRecord
     */
    public WitnessRecord(String shareOpenid, String witnessOpenid, Integer categoryId, LocalDateTime createTime) {
        super(Witness.WITNESS);

        set(0, shareOpenid);
        set(1, witnessOpenid);
        set(2, categoryId);
        set(3, createTime);
    }
}
