/*
 * This file is generated by jOOQ.
 */
package com.mjcc.message_board.jooq;


import com.mjcc.message_board.jooq.tables.PunishCategory;
import com.mjcc.message_board.jooq.tables.TReply;
import com.mjcc.message_board.jooq.tables.TUserInfo;
import com.mjcc.message_board.jooq.tables.TWordAreaInfo;
import com.mjcc.message_board.jooq.tables.TWords;
import com.mjcc.message_board.jooq.tables.UserShareInfo;
import com.mjcc.message_board.jooq.tables.Witness;
import com.mjcc.message_board.jooq.tables.records.PunishCategoryRecord;
import com.mjcc.message_board.jooq.tables.records.TReplyRecord;
import com.mjcc.message_board.jooq.tables.records.TUserInfoRecord;
import com.mjcc.message_board.jooq.tables.records.TWordAreaInfoRecord;
import com.mjcc.message_board.jooq.tables.records.TWordsRecord;
import com.mjcc.message_board.jooq.tables.records.UserShareInfoRecord;
import com.mjcc.message_board.jooq.tables.records.WitnessRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<TReplyRecord, Integer> IDENTITY_T_REPLY = Identities0.IDENTITY_T_REPLY;
    public static final Identity<TWordAreaInfoRecord, Integer> IDENTITY_T_WORD_AREA_INFO = Identities0.IDENTITY_T_WORD_AREA_INFO;
    public static final Identity<TWordsRecord, Integer> IDENTITY_T_WORDS = Identities0.IDENTITY_T_WORDS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<PunishCategoryRecord> PUNISH_CATEGORY_PKEY = UniqueKeys0.PUNISH_CATEGORY_PKEY;
    public static final UniqueKey<TReplyRecord> T_REPLY_PKEY = UniqueKeys0.T_REPLY_PKEY;
    public static final UniqueKey<TUserInfoRecord> T_USER_INFO_PKEY = UniqueKeys0.T_USER_INFO_PKEY;
    public static final UniqueKey<TWordAreaInfoRecord> T_WORD_AREA_INFO_PKEY = UniqueKeys0.T_WORD_AREA_INFO_PKEY;
    public static final UniqueKey<TWordsRecord> T_WORDS_PKEY = UniqueKeys0.T_WORDS_PKEY;
    public static final UniqueKey<UserShareInfoRecord> USER_SHARE_INFO_PKEY = UniqueKeys0.USER_SHARE_INFO_PKEY;
    public static final UniqueKey<WitnessRecord> WITNESS_PKEY = UniqueKeys0.WITNESS_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<TReplyRecord, Integer> IDENTITY_T_REPLY = Internal.createIdentity(TReply.T_REPLY, TReply.T_REPLY.LR_ID);
        public static Identity<TWordAreaInfoRecord, Integer> IDENTITY_T_WORD_AREA_INFO = Internal.createIdentity(TWordAreaInfo.T_WORD_AREA_INFO, TWordAreaInfo.T_WORD_AREA_INFO.ARTICLE_ID);
        public static Identity<TWordsRecord, Integer> IDENTITY_T_WORDS = Internal.createIdentity(TWords.T_WORDS, TWords.T_WORDS.LW_ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<PunishCategoryRecord> PUNISH_CATEGORY_PKEY = Internal.createUniqueKey(PunishCategory.PUNISH_CATEGORY, "punish_category_pkey", PunishCategory.PUNISH_CATEGORY.CATEGORY_ID);
        public static final UniqueKey<TReplyRecord> T_REPLY_PKEY = Internal.createUniqueKey(TReply.T_REPLY, "t_reply_pkey", TReply.T_REPLY.LR_ID);
        public static final UniqueKey<TUserInfoRecord> T_USER_INFO_PKEY = Internal.createUniqueKey(TUserInfo.T_USER_INFO, "t_user_info_pkey", TUserInfo.T_USER_INFO.OPENID);
        public static final UniqueKey<TWordAreaInfoRecord> T_WORD_AREA_INFO_PKEY = Internal.createUniqueKey(TWordAreaInfo.T_WORD_AREA_INFO, "t_word_area_info_pkey", TWordAreaInfo.T_WORD_AREA_INFO.ARTICLE_ID);
        public static final UniqueKey<TWordsRecord> T_WORDS_PKEY = Internal.createUniqueKey(TWords.T_WORDS, "t_words_pkey", TWords.T_WORDS.LW_ID);
        public static final UniqueKey<UserShareInfoRecord> USER_SHARE_INFO_PKEY = Internal.createUniqueKey(UserShareInfo.USER_SHARE_INFO, "user_share_info_pkey", UserShareInfo.USER_SHARE_INFO.SHARE_OPENID);
        public static final UniqueKey<WitnessRecord> WITNESS_PKEY = Internal.createUniqueKey(Witness.WITNESS, "witness_pkey", Witness.WITNESS.SHARE_OPENID);
    }
}
